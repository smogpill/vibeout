// Copyright(c) 2022 Jounayd Id Salah
#version 450
#extension GL_GOOGLE_include_directive : require

void main() {}

#if 0


layout(location = 0) uniform uvec2 inputSize;
layout(location = 1) uniform uvec2 outputSize;
layout(binding = 0) uniform sampler2D inputTexture;
layout(binding = 0, rg16f) uniform writeonly image2D outColor;
layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

const vec2 offsets[4] =
{
    vec2(-1.0f,  -1.0f), vec2(1.0f,  -1.0f),
    vec2(-1.0f, 1.0f), vec2(1.0f, 1.0f),
};

void main()
{
    ivec2 ipos = ivec2(gl_GlobalInvocationID);
	if(any(greaterThanEqual(ipos, outputSize)))
		return;

    vec2 uv = (ipos + 0.5f) / vec2(outputSize);
    vec2 halfPixelSize = (1.0f / vec2(inputSize)) * 0.5;

    vec2 color = vec2(0.0f);
    for (uint i = 0; i < 4; ++i)
    {
        vec2 sampleUV = uv + offsets[i] * halfPixelSize;
        vec2 sampleColor = texture(inputTexture, sampleUV).xy;
        color.x += sampleColor.x;
        color.y = max(color.y, sampleColor.y);
    }
    color.x /= 4.0f;

    imageStore(outColor, ipos, vec4(color, 1, 1));
}

#endif